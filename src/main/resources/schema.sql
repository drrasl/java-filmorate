--создание таблицы пользователей
CREATE TABLE IF NOT EXISTS userStorage(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    login VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    birthday TIMESTAMP NOT NULL
);

--создание таблицы дружбы пользователей
CREATE TABLE IF NOT EXISTS friendsStorage(
    user_ID BIGINT NOT NULL REFERENCES userStorage(user_id),
    user_friend_ID BIGINT NOT NULL REFERENCES userStorage(user_id),
    PRIMARY KEY (user_ID, user_friend_ID)
);

--создание таблицы рейтинга фильмов
CREATE TABLE IF NOT EXISTS ratingOfFilmByMpa(
    rating_mpa_ID INTEGER NOT NULL PRIMARY KEY,
    rating_name varchar(100) NOT NULL
);

--создание таблицы фильмов
CREATE TABLE IF NOT EXISTS filmStorage(
    film_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    description varchar(200) NOT NULL,
    releaseDate TIMESTAMP NOT NULL,
    duration BIGINT NOT NULL,
    rating_mpa_ID INTEGER REFERENCES ratingOfFilmByMpa(rating_mpa_ID)
);

--создание таблицы хранения лайков
CREATE TABLE IF NOT EXISTS likeStorage(
    film_ID BIGINT NOT NULL REFERENCES filmStorage(film_ID) ON DELETE CASCADE,
    user_ID BIGINT NOT NULL REFERENCES userStorage(user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_ID, user_ID)
);

--создание таблицы жанров
CREATE TABLE IF NOT EXISTS genres(
    genre_ID INTEGER NOT NULL PRIMARY KEY,
    genre_name varchar(100) NOT NULL
);

--создание таблицы соотношения фильмов и жанров
CREATE TABLE IF NOT EXISTS filmGenres(
    film_ID BIGINT NOT NULL REFERENCES filmStorage(film_ID) ON DELETE CASCADE,
    genre_ID INTEGER NOT NULL REFERENCES genres(genre_ID),
    PRIMARY KEY (film_ID, genre_ID)
);








